{"version":3,"sources":["components/ContactList/ContactListItem/ContactListItem.module.css","components/Filter/Filter.module.css","components/ContactList/ContactList.module.css","components/ContactForm/ContactForm.jsx","redux/contacts/contacts-actions.js","components/Filter/Filter.jsx","components/ContactList/ContactListItem/ContactListItem.jsx","redux/contacts/contacts-selectors.js","components/ContactList/ContactList.jsx","App.js","redux/contacts/contacts-reducers.js","redux/store.js","index.js","components/ContactForm/ContactForm.module.css"],"names":["module","exports","ContactForm","state","name","number","updateState","e","setState","target","value","handleSubmit","preventDefault","props","onSubmit","className","s","form","this","autoComplete","type","pattern","title","required","input","onChange","button","Component","addContact","createAction","deleteContact","setFilter","importContacts","Filter","dispatch","useDispatch","filter","ContactListItem","id","onDelete","li","onClick","getItems","contacts","items","getFilter","ContactList","useSelector","item","toLowerCase","includes","ul","map","v4","App","useEffect","localStorage","getItem","JSON","parse","setItem","stringify","some","alert","itemsReducer","createReducer","action","payload","filterReducer","contactsReducer","combineReducers","rootReducer","store","configureStore","reducer","devTools","process","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.3eb7ea3f.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"li\":\"ContactListItem_li__u5DBj\",\"button\":\"ContactListItem_button__3WhCT\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"filter\":\"Filter_filter__24fM7\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ul\":\"ContactList_ul__3Xu9O\"};","import React, { Component } from \"react\";\r\nimport s from \"./ContactForm.module.css\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nclass ContactForm extends Component {\r\n  state = {\r\n    name: \"\",\r\n    number: \"\",\r\n  };\r\n  updateState = (e) => {\r\n    this.setState({ [e.target.name]: e.target.value });\r\n  };\r\n  handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    this.props.onSubmit(this.state);\r\n    this.setState({\r\n      name: \"\",\r\n      number: \"\",\r\n    });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <form className={s.form} onSubmit={this.handleSubmit}>\r\n        <label>\r\n          Name\r\n          <input\r\n            autoComplete=\"off\"\r\n            type=\"text\"\r\n            name=\"name\"\r\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n            title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n            required\r\n            className={s.input}\r\n            onChange={this.updateState}\r\n            value={this.state.name}\r\n          />\r\n        </label>\r\n        <label>\r\n          Number\r\n          <input\r\n            autoComplete=\"off\"\r\n            type=\"tel\"\r\n            name=\"number\"\r\n            pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n            title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\r\n            required\r\n            className={s.input}\r\n            onChange={this.updateState}\r\n            value={this.state.number}\r\n          />\r\n        </label>\r\n        <button type=\"submit\" className={s.button}>\r\n          Add Contact\r\n        </button>\r\n      </form>\r\n    );\r\n  }\r\n}\r\n\r\nContactForm.propTypes = {\r\n  onSubmit: PropTypes.func,\r\n}\r\n\r\nexport default ContactForm;\r\n","import { createAction } from \"@reduxjs/toolkit\";\r\n\r\nexport const addContact = createAction(\"contact/add\");\r\nexport const deleteContact = createAction(\"contact/delete\");\r\nexport const setFilter = createAction(\"set/filter\");\r\nexport const importContacts = createAction(\"contacts/import\")","import s from \"./Filter.module.css\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { setFilter } from \"../../redux/contacts/contacts-actions\";\r\n\r\nconst Filter = () => {\r\n  const dispatch = useDispatch();\r\n\r\n  const search = ({ target: { value } }) => {\r\n    dispatch(setFilter(value));\r\n  };\r\n\r\n  return (\r\n    <input className={s.filter} type=\"text\" name=\"filter\" onChange={search} />\r\n  );\r\n};\r\n\r\nexport default Filter;\r\n","import s from \"./ContactListItem.module.css\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst ContactListItem = ({ props : {name, number, id}, onDelete }) => {\r\n\r\n  return (\r\n    <li className={s.li} id={id}>\r\n      <span>{name}:</span>\r\n      <span>{number}</span>\r\n      <button type=\"button\" className={s.button} onClick={() => onDelete(id)\r\n}>\r\n        Delete\r\n      </button>\r\n    </li>\r\n  );\r\n};\r\n\r\nContactListItem.propTypes = {\r\n  props: PropTypes.shape ({\r\n    name: PropTypes.string,\r\n    number: PropTypes.string,\r\n    id: PropTypes.string,\r\n  }),\r\n  onDelete: PropTypes.func,\r\n};\r\nexport default ContactListItem;\r\n","export const getItems = (state) => state.contacts.items;\r\nexport const getFilter = state => state.contacts.filter\r\n","import s from \"./ContactList.module.css\";\r\nimport ContactListItem from \"./ContactListItem\";\r\nimport { v4 } from \"uuid\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { deleteContact, filterContactsList } from \"../../redux/contacts/contacts-actions\";\r\nimport { getItems, getFilter } from \"../../redux/contacts/contacts-selectors\";\r\n\r\nconst ContactList = () => {\r\n\r\n  const items = useSelector(getItems);\r\n  const filter = useSelector(getFilter);\r\n  const dispatch = useDispatch();\r\n\r\n  let contacts = items.filter((item) => item.name.toLowerCase().includes(filter.toLowerCase()));\r\n  \r\n  return <ul className={s.ul}>{contacts.map((item) => (\r\n    <ContactListItem\r\n      key={v4()}\r\n      props={item}\r\n      onDelete={() => dispatch(deleteContact(item.id))}\r\n    />\r\n  ))}</ul>;\r\n};\r\n\r\n\r\nexport default ContactList;\r\n","import {useEffect } from \"react\";\nimport { v4 } from \"uuid\";\nimport \"./App.css\";\nimport ContactForm from \"./components/ContactForm/ContactForm\";\nimport Filter from \"./components/Filter\";\nimport ContactList from \"./components/ContactList\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { addContact, importContacts } from \"./redux/contacts/contacts-actions\";\nimport { getItems } from \"./redux/contacts/contacts-selectors\";\n\nconst App = () => {\n  const items = useSelector(getItems);\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    if (localStorage.getItem(\"contacts\")) {\n      dispatch(importContacts(JSON.parse(localStorage.getItem(\"contacts\"))));\n    }\n  }, []);\n\n  useEffect(() => {\n    localStorage.setItem(\"contacts\", JSON.stringify(items));\n  }, [items]);\n\n  const formSubmitHandler = ({ name, number }) => {\n    if (items.some((item) => item.name.toLowerCase() === name.toLowerCase())) {\n      alert(`${name} is alerady in your contacts`);\n      return;\n    }\n    dispatch(addContact({ id: v4(), name, number }));\n  };\n\n  return (\n    <div className=\"App\">\n      <h1>Phonebook</h1>\n      <ContactForm onSubmit={formSubmitHandler} />\n      <h2>Contacts</h2>\n      <Filter />\n      <ContactList />\n    </div>\n  );\n};\n\nexport default App;\n","import { combineReducers } from \"redux\";\r\nimport { createReducer } from \"@reduxjs/toolkit\";\r\nimport {\r\n  addContact,\r\n  deleteContact,\r\n  setFilter,\r\n  importContacts,\r\n} from \"./contacts-actions\";\r\n\r\nconst itemsReducer = createReducer([], {\r\n  [importContacts]: (state, action) => [...action.payload],\r\n  [addContact]: (state, action) => [...state, action.payload],\r\n  [deleteContact]: (state, action) =>\r\n    [...state].filter((item) => item.id !== action.payload),\r\n});\r\n\r\nconst filterReducer = createReducer(\"\", {\r\n  [setFilter]: (state, action) => action.payload,\r\n});\r\n\r\nconst contactsReducer = combineReducers({\r\n  items: itemsReducer,\r\n  filter: filterReducer,\r\n});\r\n\r\nexport default contactsReducer;\r\n","import { combineReducers } from \"redux\";\r\nimport { configureStore } from \"@reduxjs/toolkit\";\r\nimport contactsReducer from \"../redux/contacts/contacts-reducers\";\r\n\r\nconst rootReducer = combineReducers({ contacts: contactsReducer });\r\n\r\nconst store = configureStore({\r\n  reducer: rootReducer,\r\n  devTools: process.env.NODE_ENV === true,\r\n});\r\n\r\nexport default store;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport { Provider } from \"react-redux\";\nimport store from './redux/store'\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"ContactForm_form__U6T2D\",\"input\":\"ContactForm_input__27kot\"};"],"sourceRoot":""}